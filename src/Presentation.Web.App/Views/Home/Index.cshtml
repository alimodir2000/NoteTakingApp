@model NoteTakingAppSolution.Application.Common.Models.PaginatedList<NoteTakingAppSolution.Application.Notes.Queries.GetNotesWithPagination.NoteBriefDto>
@{
    Layout = "~/Views/Shared/_Note.cshtml";
}




<div class="container">

    <div class="create-note-button">Double Click on the Screen to Create a Note!</div>

</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>


    <script>
        $(function () {
            var zInd = 0;

            var container = $('.container');

            container.on('dblclick', function (event) {
                var x = event.pageX;
                var y = event.pageY;
                if ($(event.target).is(container)) {
                    zInd++;
                    createNote(x, y);
                }
            });




            function createNote(x, y) {
                $.ajax({
                    url: "/api/notes",
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json",
                    data: JSON.stringify({ text: "" }),
                    success: function (data) {
                        var note = $('<div class="note" data-id="' + data.id + '"></div>');
                        var header = $('<div class="note-header"></div>');
                        var deleteButton = $('<div class="delete-button">X</div>');
                        var date = $('<div class="date">' + data.title + '</div>');
                        var text = $('<div class="note-text" contenteditable="true">' + data.noteBody + '</div>');

                        deleteButton.on('click', function () {
                            deleteNote(data.id);
                            console.log(`Note with id ${data.id} deleted`);
                        });

                        text.on('blur', function () {
                            updateNote(data.id, this.innerHTML);
                            console.log(`Note with id ${data.id}  updated`);
                        });

                        note.click(function () {
                            zInd++;
                            note.css('z-index', zInd);
                        });

                        header.append(deleteButton, date);
                        note.append(header, text);
                        note.css({ left: x, top: y });
                        container.append(note);
                        text.focus();
                        console.log(`Note with id ${data.id} created`);

                    },
                    error: function (xhr, textStatus, errorThrown) {
                        alert('Error creating note: ' + errorThrown);
                    }
                });
            }

            function deleteNote(id) {
                $.ajax({
                    url: "/api/notes/" + id,
                    type: "DELETE",
                    success: function () {
                        $('[data-id="' + id + '"]').remove();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        alert('Error deleting note: ' + errorThrown);
                    }
                });
            }

            function updateNote(id, text) {
                if (text === 'New Note!')
                    return;
                $.ajax({
                    url: "/api/notes/" + id,
                    type: "PUT",
                    dataType: "json",
                    contentType: "application/json",
                    data: JSON.stringify({ NoteBody: text }),
                    success: function () { },
                    error: function (xhr, textStatus, errorThrown) {
                        alert('Error updating note: ' + errorThrown);
                    }
                });
            }
        });
    </script>
}
